<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
	<context:component-scan base-package="com.caocao.core" />
	<bean id="dataSource" class="org.logicalcobwebs.proxool.ProxoolDataSource">
		<property name="driver">
			<value>${jdbc.driverClassName}</value>
		</property>
		<property name="driverUrl">
			<value>${jdbc.url}</value>
		</property>
		<property name="user">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
		<property name="houseKeepingSleepTime">
			<value>${jdbc.houseKeepingSleepTime}</value>
		</property>
		<property name="houseKeepingTestSql" value="${jdbc.validationquery}" />
		<property name="maximumConnectionCount">
			<value>${jdbc.maximumConnectionCount}</value>
		</property>
		<property name="minimumConnectionCount">
			<value>${jdbc.minimumConnectionCount}</value>
		</property>
	</bean>

	<!-- mybatis基础配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:conf/mybatis.xml" />
		<!-- spring mybaties结合方式1 <property name="mapperLocations"> <array> <value>classpath:AdminMapper.xml</value> 
			</array> </property> -->
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 配置sqlSessionTemplate spring mybaties结合方式1 接口实现类需继承SqlSessionDaoSupport并@Resource 
		setSqlSessionTemplate 获取getSqlSession().selectOne-->
	<!-- <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate"> 
		<constructor-arg index="0" ref="sqlSessionFactory" /> </bean> -->
	<!-- mybatis操作接口扫描 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.caocao.core.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<!-- 事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 开启注解事务机制 配置基于注解方式的事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!--Spring 声明式配置 -->
	<!-- <tx:advice id="txAdvice" transaction-manager="transactionManager"> 
		<tx:attributes> 
		<tx:method name="get*" read-only="true"/> 
		<tx:method name="set*" 
		read-only="true"/>
		<tx:method name="query*" read-only="true"/>
		<tx:method 
		name="find*" read-only="true"/>
		<tx:method name="load*" read-only="true"/> 
		<tx:method name="count*" read-only="true"/>
		<tx:method name="save*" rollback-for="Exception"/> 
		<tx:method name="update*" rollback-for="Exception"/> 
		<tx:method name="delete*" 
		rollback-for="Exception"/> 
		<tx:method name="merage*" rollback-for="Exception"/> 
		</tx:attributes> 
		</tx:advice> 
		<aop:config> 
		<aop:pointcut id="serviceOperation" 
		expression="execution(* com.asiainfo.tdmc.service.*SV.*(..))"/> <aop:advisor 
		advice-ref="txAdvice" pointcut-ref="serviceOperation"/> </aop:config> -->

</beans>