<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd"
	default-lazy-init="true" default-autowire="byName">
	<!--解析aop标签注释,设置成false代表是用cglib，相反为JDK动态代理 -->
	<aop:aspectj-autoproxy />
	<!-- <context:annotation-config /> 包含4个注解（已集成到context:component-scan中 -->
	<context:component-scan base-package="com.caocao.web.control" />
	<!-- <mvc:annotation-driven conversion-service="" validator="" />  
	包含AnnotationMethodHandlerAdapter和DefaultAnnotationHandlerMapping及FormattingConversionServiceFactoryBean
		） -->
	<!-- <mvc:default-servlet-handler/> 用于处理静态资源 -->
	<!-- 对静态资源文件的访问 方案二 （二选一） -->
	<!-- <mvc:resources mapping="/images/**" location="/images/" cache-period="31556926"/> 
		<mvc:resources mapping="/js/**" location="/js/" cache-period="31556926"/> 
		<mvc:resources mapping="/css/**" location="/css/" cache-period="31556926"/> -->
	<!--拦截器配置（全局或指定） -->
	<!-- <mvc:interceptors/> -->
	<!-- <mvc:interceptors >
	 <mvc:interceptor> 
	 <mvc:mapping path="/user/*" /> 
	 <bean class="com.mvc.MyInteceptor"></bean>
	 </mvc:interceptor>
	 </mvc:interceptors> -->
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="webBindingInitializer" ref="configurableWebBindingInitializer" />
		<!-- messageConverters属性的配置可以解决JSON返回中文为问号的问题 -->
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/plain;charset=UTF-8</value>
						</list>
					</property>
				</bean>
				<bean
					class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
							<value>application/json;charset=UTF-8</value>
						</list>
					</property>
					<property name="objectMapper">
					<bean class="com.github.miemiedev.mybatis.paginator.jackson2.PageListJsonMapper" />
					</property>
				</bean>
			</list>
		</property>
	</bean>

<!--  	<bean id="validatemessageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">  
        <property name="basename" value="classpath:i18n/core.properties"/>  
        <property name="fileEncodings" value="utf-8"/>
        <property name="cacheSeconds" value="120"/>  
    </bean>  -->  
    <!-- 文件上传配置 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <property name="maxUploadSize" value="512000"/>
    </bean>
    <bean id="messageSource" class="com.caocao.web.extend.CustomerResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>core.properties</value>
			</list>
		</property>
		<property name="defaultEncoding" value="utf-8" />
		<property name="cacheSeconds" value="120" />
		<property name="useCodeAsDefaultMessage" value="true" />
	</bean>
    
        <!-- 声明Spring格式转换器，并配置相关类型的转换器，现只配置了日期对应的转换器 -->
	<bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="registerDefaultFormatters" value="false" />
		<property name="formatterRegistrars">
			<set>
				<bean class="com.caocao.web.extend.CustomDateFormatterRegistrar">
					<property name="formatter">
						<bean class="org.springframework.format.datetime.DateFormatter">
							<property name="pattern" value="yyyy-MM-dd" />
						</bean>
					</property>
				</bean>
			</set>
		</property>
	</bean>
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<property name="validationMessageSource" ref="messageSource" />
	</bean>
	<!-- 将Spring格式转换器注册到MVC中 -->
	<bean id="configurableWebBindingInitializer"
		class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
		<property name="conversionService" ref="conversionService" />
		<property name="validator" ref="validator"></property>
	</bean>

	

	
	<!-- 可拦截用户请求 -->
	<bean id="myHandlerInterceptorAdapter" class="com.caocao.web.interceptor.MyHandlerInterceptorAdapter" />

	<!-- 注解依赖的适配器 DefaultAnnotationHandlerMapping -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="interceptors">
			<list>
				<ref bean="myHandlerInterceptorAdapter" />
			</list>
		</property>
	</bean>
	<!-- spring mvc全局异常处理 -->
	<bean id="exceptionResolver" class="com.caocao.web.extend.ExceptionHandler"/> 
<!-- 	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="defaultErrorView"> 全局异常处理配置
			<value>exception/serverException.do</value>
		</property>
		<property name="defaultStatusCode">
			<value>500</value>
		</property>
		指定不同的异常可以输出到不同的页面
		<property name="exceptionMappings"> 
			<props>
				<prop key="UserDefinedException">exception/serverException.do</prop>
				<prop key="java.lang.RuntimeException">showError</prop>
			</props>
		</property>
		<property name="warnLogCategory" value="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver" /> 
	</bean> -->
	<!-- JSP视图配置 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<mvc:resources location="/upload/" mapping="/upload/**"/>
	<context:property-placeholder location="classpath:conf/sysConf.properties"/>
	<!-- Spring @AutoWired 依赖自动注入,不需要setter方法 ,都已经包含在context:component-scan中了 -->
	<!-- <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" 
		/> -->
</beans>